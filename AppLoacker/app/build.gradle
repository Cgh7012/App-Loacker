apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

android {


    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "${app_id}"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode project.version_code as int
        versionName "${version_name}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            keyAlias "${signing_keyAlias}"
            keyPassword "${signging_certificatePassword}"
            storeFile file('E:/workspace/dev_apploacker/AppLoacker/apploacker.jks')
            storePassword "${signging_storePassword}"
        }
        release {
            keyAlias "${signing_keyAlias}"
            keyPassword "${signging_certificatePassword}"
            storeFile file('E:/workspace/dev_apploacker/AppLoacker/apploacker.jks')
            storePassword "${signging_storePassword}"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            debuggable true
            versionNameSuffix "-debug"
            //混淆
            minifyEnabled false
            //拆分dex
            multiDexEnabled true
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //fish 文件配置
            buildConfigField('java.lang.String', 'FISH_LANGUAGE', "${language_sit}")

        }
        release {
            // 不显示Log
            debuggable false
            //混淆
            minifyEnabled true
            //拆分dex
            multiDexEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            signingConfig signingConfigs.release
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //fish 文件配置
            buildConfigField('java.lang.String', 'FISH_LANGUAGE', "${language_prd}")

        }
    }

    //忽略一些错误
    lintOptions {
        abortOnError true
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation 'com.android.support:appcompat-v7:25.0.0'
    implementation 'com.android.support:design:25.0.0'
    //数据库
    implementation 'org.litepal.android:core:1.4.1'
}
